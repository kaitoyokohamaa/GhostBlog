{"ast":null,"code":"\"use strict\";\n\nvar contentful = _interopRequireWildcard(require(\"contentful\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst config = contentful.createClient({\n  space: process.env.REACT_APP_SPACE_ID,\n  accessToken: process.env.REACT_APP_ACCESS_TOKEN\n});\nmodule.exports = {\n  createClient() {\n    return contentful.createClient(config);\n  }\n\n};","map":{"version":3,"sources":["/Users/yoko/Desktop/GhostBlog/pages/client.tsx"],"names":["config","contentful","createClient","space","process","env","REACT_APP_SPACE_ID","accessToken","REACT_APP_ACCESS_TOKEN","module","exports"],"mappings":";;AAAA;;;;;;AAEA,MAAMA,MAAM,GAAGC,UAAU,CAACC,YAAX,CAAwB;AACrCC,EAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,kBADkB;AAErCC,EAAAA,WAAW,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFY,CAAxB,CAAf;AAKAC,MAAM,CAACC,OAAP,GAAiB;AACfR,EAAAA,YAAY,GAAG;AACb,WAAOD,UAAU,CAACC,YAAX,CAAwBF,MAAxB,CAAP;AACD;;AAHc,CAAjB","sourcesContent":["import * as contentful from \"contentful\";\n\nconst config = contentful.createClient({\n  space: process.env.REACT_APP_SPACE_ID,\n  accessToken: process.env.REACT_APP_ACCESS_TOKEN,\n});\n\nmodule.exports = {\n  createClient() {\n    return contentful.createClient(config);\n  },\n};\n"]},"metadata":{},"sourceType":"script"}