{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as contentful from \"contentful\";\nexport var client = contentful.createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n});\nexport var getAllPosts = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var entries;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return client.getEntries({\n              content_type: \"post\"\n            })[\"catch\"](console.error);\n\n          case 2:\n            entries = _context.sent;\n\n            if (!entries.items) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", entries.items);\n\n          case 5:\n            console.log(\"Error getting .\");\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getAllPosts() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/yoko/Desktop/GhostBlog/lib/client.tsx"],"names":["contentful","client","createClient","space","process","env","NEXT_PUBLIC_CONTENTFUL_SPACE_ID","accessToken","NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN","getAllPosts","getEntries","content_type","console","error","entries","items","log"],"mappings":";;AAAA,OAAO,KAAKA,UAAZ,MAA4B,YAA5B;AAEA,OAAO,IAAMC,MAAM,GAAGD,UAAU,CAACE,YAAX,CAAwB;AAC5CC,EAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,+BADyB;AAE5CC,EAAAA,WAAW,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFmB,CAAxB,CAAf;AAIP,OAAO,IAAMC,WAAW;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHR,MAAM,CACzBS,UADmB,CACR;AACVC,cAAAA,YAAY,EAAE;AADJ,aADQ,WAIbC,OAAO,CAACC,KAJK,CADG;;AAAA;AACnBC,YAAAA,OADmB;;AAAA,iBAOrBA,OAAO,CAACC,KAPa;AAAA;AAAA;AAAA;;AAAA,6CAQhBD,OAAO,CAACC,KARQ;;AAAA;AAUzBH,YAAAA,OAAO,CAACI,GAAR;;AAVyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXP,WAAW;AAAA;AAAA;AAAA,GAAjB","sourcesContent":["import * as contentful from \"contentful\";\n\nexport const client = contentful.createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN,\n});\nexport const getAllPosts = async () => {\n  const entries = await client\n    .getEntries({\n      content_type: \"post\",\n    })\n    .catch(console.error);\n\n  if (entries.items) {\n    return entries.items;\n  }\n  console.log(`Error getting .`);\n};\n"]},"metadata":{},"sourceType":"module"}